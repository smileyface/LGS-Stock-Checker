services:
  test-runner:
    build: .
    container_name: test-runner
    command: python tests/test_for_explosions.py
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
    restart: "no"  # Prevents automatic restart on failure
    healthcheck:  # This tells Docker Compose if the service is "healthy"
      test: ["CMD", "test", "-f", "/app/tests_passed"]  # Only passes if the file exists
      interval: 10s
      retries: 3
      start_period: 5s

  web-app:
    build: .
    container_name: web-app
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    depends_on:
      - test-runner
      - redis
      - db
    environment:
      - REDIS_HOST=redis
      - RUNNING_IN_DOCKER=true
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/lgs_stock_checker
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379" # Ensure Redis is exposed
    restart: unless-stopped

  rq-worker:
    build: .
    container_name: rq-worker
    command: rq worker default
    depends_on:
      - test-runner
      - redis
    environment:
      - REDIS_HOST=redis
      - RUNNING_IN_DOCKER=true
    restart: unless-stopped

    db:
      image: postgres:latest
      restart: always
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        POSTGRES_DB: lgs_stock_checker
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: