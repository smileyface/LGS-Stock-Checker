# This Nginx configuration is optimized for serving a Single Page Application (SPA)
# like Vue, and for proxying API requests to a backend service.

server {
    listen 80;
    server_name localhost;

    # Define the root directory for static files, which corresponds to the
    # 'dist' folder copied from the build stage in the Dockerfile.
    root /usr/share/nginx/html;
    index index.html;

    # This location block is the key for SPA routing.
    location / {
        # It tries to find a file matching the exact URI, then a directory.
        # If neither is found, it falls back to serving /index.html.
        # This allows Vue Router to handle all non-static-asset routes.
        try_files $uri $uri/ /index.html;
    }

    # Reverse proxy for all API calls to the backend service.
    # Any request to http://<host>:8000/api/... will be forwarded
    # to http://backend:5000/api/...
    location /api {
        # The service name 'backend' is resolved by Docker's internal DNS.
        proxy_pass http://backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Reverse proxy for Socket.IO connections.
    # This requires special headers to handle the WebSocket protocol upgrade.
    location /socket.io {
        proxy_pass http://backend:5000/socket.io;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
}
    # Reverse proxy for all API calls to the backend service.
    # Any request to http://<host>:8000/api/... will be forwarded
    # to http://backend:5000/api/...
    location /api {
        # The service name 'backend' is resolved by Docker's internal DNS.
        proxy_pass http://backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    # Reverse proxy for Socket.IO connections.
    # This requires special headers to handle the WebSocket protocol upgrade.
    location /socket.io {
        proxy_pass http://backend:5000/socket.io;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
}

